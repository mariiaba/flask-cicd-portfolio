# Name of the workflow
name: CI/CD Pipeline for Flask App

# Controls when the workflow will run
on:
  # Triggers the workflow on push events for the main branch
  push:
    branches: [ "main" ]
  # Triggers on pull requests to the main branch (for testing before merging)
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job is named "build-and-test"
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Step 3: Install Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run tests with pytest
      # This is the "CI" part. If tests fail, the pipeline stops.
      - name: Run tests
        run: pytest

      # Step 5: Log in to Docker Hub
      # This step only runs on a push to the main branch, not on pull requests
      - name: Login to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 6: Build and push the Docker image
      # This step also only runs on a push to the main branch
      - name: Build and push Docker image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # Tag the image with the Docker Hub username and repo name
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/flask-cicd-portfolio:latest
